Dump Code

import java.time.temporal.IsoFields;
import java.util.*;

interface Lists{
    void displayList();
    void addToList();
}

class Books{

    String bookTitle;
    String bookAuthor;
    String bookId;

    // first [] = book names
    // second [] = book authors
//    String[][] fromLibrary;

    Books() {
        this.bookTitle = "";
        this.bookAuthor = "";

        // Book Names ,   Book Authors
    }


}

class Library implements Lists{

    String[][] defaultBooks;
    ArrayList<ArrayList<String>> bookFromLibrary = new ArrayList<ArrayList<String>>();
    ArrayList<String> bookTitle = new ArrayList<String>();
    ArrayList<String> bookAuthor = new ArrayList<String>();
    ArrayList<String> bookGenre = new ArrayList<String>();

    ArrayList<ArrayList<String>> listOfBooks = new ArrayList<ArrayList<String>>();

    public Library(){
        this.defaultBooks = new String[][]{
                {"Don Quixote", "Miguel de Cervantes", "Fiction"},
                {"Alice's Adventures in Wonderland", "Lewis Carroll", "Fantasy"},
                {"The Adventures of Huckleberry Finn", "Mark Twain", "Adventure"},
                {"The Adventures of Tom Sawyer", "Mark Twain", "Adventure"},
                {"Treasure Island", "Robert Louis Stevenson", "Adventure"},
                {"Pride and Prejudice", "Jane Austen", "Romance"},
                {"Wuthering Heights", "Emily Brontë", "Gothic Fiction"},
                {"Jane Eyre", "Charlotte Brontë", "Gothic Fiction"},
                {"Moby Dick", "Herman Melville", "Adventure"},
                {"The Scarlet Letter", "Nathaniel Hawthorne", "Historical Fiction"},
                {"Gulliver's Travels", "Jonathan Swift", "Satire"},
                {"The Pilgrim's Progress", "John Bunyan", "Allegory"},
                {"A Christmas Carol", "Charles Dickens", "Fiction"},
                {"David Copperfield", "Charles Dickens", "Fiction"},
                {"A Tale of Two Cities", "Charles Dickens", "Historical Fiction"},
                {"Little Women", "Louisa May Alcott", "Coming-of-Age"},
                {"Great Expectations", "Charles Dickens", "Fiction"},
                {"The Hobbit, or, There and Back Again", "J.R.R. Tolkien", "Fantasy"},
                {"Frankenstein, or, the Modern Prometheus", "Mary Shelley", "Gothic Fiction"},
                {"Oliver Twist", "Charles Dickens", "Fiction"},
                {"Uncle Tom's Cabin", "Harriet Beecher Stowe", "Anti-Slavery Novel"},
                {"Crime and Punishment", "Fyodor Dostoyevsky", "Psychological Fiction"},
                {"Madame Bovary: Patterns of Provincial life", "Gustave Flaubert", "Realism"},
                {"The Return of the King", "J.R.R. Tolkien", "Fantasy"},
                {"Dracula", "Bram Stoker", "Gothic Fiction"},
                {"The Three Musketeers", "Alexandre Dumas", "Historical Adventure"},
                {"Brave New World", "Aldous Huxley", "Dystopian Fiction"},
                {"War and Peace", "Leo Tolstoy", "Historical Fiction"},
                {"To Kill a Mockingbird", "Harper Lee", "Southern Gothic"},
                {"The Wizard of Oz", "L. Frank Baum", "Fantasy"},
                {"Les Misérables", "Victor Hugo", "Historical Fiction"},
                {"The Secret Garden", "Frances Hodgson Burnett", "Children's Literature"},
                {"Animal Farm", "George Orwell", "Political Satire"},
                {"The Great Gatsby", "F. Scott Fitzgerald", "Fiction"},
                {"The Little Prince", "Antoine de Saint-Exupéry", "Children's Literature"},
                {"The Call of the Wild", "Jack London", "Adventure"},
                {"20,000 Leagues Under the Sea", "Jules Verne", "Adventure"},
                {"Anna Karenina", "Leo Tolstoy", "Realist Fiction"},
                {"The Wind in the Willows", "Kenneth Grahame", "Children's Literature"},
                {"The Picture of Dorian Gray", "Oscar Wilde", "Gothic Fiction"}
        };

    }



    @Override
    public void displayList() {
        for (byte i = 0; i < defaultBooks.length; i++) {
            System.out.printf("Book no. %d:\nBook Name: %s\nAuthor: %s\nGenre: %s\n\n", i + 1, defaultBooks[i][0], defaultBooks[i][1], defaultBooks[i][2]);
        }
    }

    void initializeLibraryList(){
        for(byte i = 0; i < defaultBooks.length; i++){
            Object[] items = {bookTitle, bookAuthor, bookGenre};
//            System.out.println("\nBook " + (i + 1) + ":");
            for(byte j = 0; j < defaultBooks[i].length; j++){
                items[j] = defaultBooks[i][j];

//                System.out.printf("%s: %s\n", title[j],defaultBooks[i][j]);

            }
//            bookTitle.add(defaultBooks[][])
        }
    }



/*    void initializeLibraryList() {
        int maxBooks = defaultBooks.length;
        int maxAttributes = defaultBooks[0].length;

        // Assuming maxAttributes is always 3 (title, author, genre)
        for (int i = 0; i < maxBooks; i++) {
            String[] attributes = {"Title", "Author", "Genre"};


            for (int j = 0; j < maxAttributes; j++) {
                System.out.printf("%s: %s%n", attributes[j], defaultBooks[i][j]);
            }

            System.out.println(); // Adding a new line for separation
        }
    }*/

    public void addToList(){
/*        for(byte i = 0; i < defaultBooks.length; i++){

        }*/
    }
}
class Records implements Lists{
    String[] recordsOptions = {"Search Available Book/s", "Order Book/s", "Book-Cart", "Renew Book", "Checkout Book/s" };

    @Override
    public void displayList(){
        for(byte i = 0; i < recordsOptions.length; i++){
            System.out.printf("%d: %s\n", (i+1), recordsOptions[i]);
        }
    }

    public void addToList(){

    }
}
class User {

    String[][] bookCart; // Book Title, Book Author

}

class LibrarySystem {
    static Library library = new Library();
    static Records records = new Records();
    static Books books = new Books();

    static User user = new User();
    static Scanner in = new Scanner(System.in);

    public static void main(String[] args) {
        System.out.println("---------------------------------------");
        System.out.println("\t \tLibrary System ver 1.");
        System.out.println("---------------------------------------");

//        records.displayList();
//
//        library.displayList();
            library.initializeLibraryList();
            for(byte i =0; i < library.bookTitle.size(); i++){
                System.out.printf("%s\n", library.bookTitle.get(i));
            }




    }
}
